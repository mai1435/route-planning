using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using SocialCar.RoutePlanner.Routing.Nodes;

namespace SocialCar.RoutePlanner.Traffic
{
    [Serializable]
    public class TrafficDataVersioned
    {
        public List<TrafficReport> TrafficReport = new List<TrafficReport>();
        public TrafficVersion Version;
    }

    [Serializable]
    public class TrafficVersion
    {
        public int version;
        public long timestampVersion;
        public string nameSite;

        public TrafficVersion(int version, long timestampVersion, string nameSite)
        {
            this.version = version;
            this.timestampVersion = timestampVersion;
            this.nameSite = nameSite;
        }
    }

    [Serializable]
    public class TrafficReport
    {
        public string Id;
        public Point Coordinates;
        public string Address;
        public string Category { get; set; }
        public TrafficSeverity Severity { get; set; }
        public long timestamp { get; set; }
        public double TrafficPropagationMaxDistance { get; set; }

        public TrafficReport(string id, Point coordinates, string category, string severity, string address, double TrafficPropagationMaxDistance)
        {
            this.Id = id;
            this.Coordinates = coordinates;
            this.Category = category;
            this.Address = address;
            this.TrafficPropagationMaxDistance = TrafficPropagationMaxDistance;

            switch (severity)
            {
                case "LOW":
                    this.Severity = TrafficSeverity.Low;
                    break;
                case "MEDIUM":
                    this.Severity = TrafficSeverity.Medium;
                    break;
                case "HIGH":
                    this.Severity = TrafficSeverity.High;
                    break;
                default:
                    this.Severity = TrafficSeverity.Medium;
                    break;
            }

        }
    }

    
    ///*
    // * This class is automatically generated by http://json2csharp.com/
    // */
    //[Serializable]
    //public class TrafficJson
    //{
    //    public List<Report> reports { get; set; }

    //    public class Report
    //    {
    //        public string category { get; set; }         // one of [TRAFFIC, WORKS, ACCIDENT]
    //        public string severity { get; set; }         // one of [LOW, MEDIUM, HIGH]
    //        public string _id { get; set; }              // unique id of the report generated by backend
    //        public Loc loc { get; set; }
    //        public long timestamp;
    //    }

    //    public class Loc
    //    {
    //        public List<double> coordinates { get; set; } // [lon, lat]
    //        public string type { get; set; }
    //    }
    //}


    /*
     * This class is automatically generated by http://json2csharp.com/
     */
    [Serializable]
    public class TrafficJson
    {
        public List<Report> reports { get; set; }

        public class Report
        {
            public Location location { get; set; }
            public string source { get; set; }
            public int timestamp { get; set; }
            public string category { get; set; }            // one of [TRAFFIC, WORKS, ACCIDENT]
            public string severity { get; set; }            // one of [LOW, MEDIUM, HIGH]
            public string _id { get; set; }                 // unique id of the report generated by backend
        }

        public class Location
        {
            public string address { get; set; }
            public Geometry geometry { get; set; }
        }

        public class Geometry
        {
            public List<double> coordinates { get; set; }   // [lon, lat]
            public string type { get; set; }
        }
    }




    [Serializable]
    public enum TrafficSeverity
    {
        Low = 0,
        Medium = 1,
        High = 2
    };

    public class TrafficDiff
    {
        public List<TrafficReport> ElementsToRemove = new List<TrafficReport>();
        public List<TrafficReport> ElementsToAdd = new List<TrafficReport>();
        public List<TrafficReport> ElementsToIgnore = new List<TrafficReport>();
    }
}
